# Reference: https://github.com/metcalfc/docker-action-examples/blob/main/.github/workflows/main-ci.yml

name: Main Branch CI

# For all pushes to the main branch run the tests and push the image to the
# GitHub registry
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: FranzDiebold/github-env-vars-action@v1.2.0
      - uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/smurfpandey/sync-listenbrainz
          VERSION=$GITHUB_SHA_SHORT
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ${TAGS}
          echo ::set-output name=tags::${TAGS}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: linux/arm/v7

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build with gradle
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: --info shadowJar

#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          builder: ${{ steps.buildx.outputs.name }}
#          platforms: linux/arm/v7
#          push: true
#          tags: ${{ steps.prep.outputs.tags }}